unit PedidoClientesController;

interface

uses generics.Collections, system.sysutils,  system.JSON, rest.json, rest.types,
     untPrincipal, unitConfiguracoes, PedidoClientesVO;

type TPedidoClientesController = class

   private

      public
         class Procedure GravarClientes(listaClientes: TObjectList<TPedidoClientesVO>);
         class Function RetornarListaDeClientes: TObjectList<TPedidoClientesVO>;



end;

implementation

{ TPedidoClientesController }

class procedure TPedidoClientesController.GravarClientes(listaClientes: TObjectList<TPedidoClientesVO>);
Var vjsonObject: TJSONObject;
    vJsonArray: TJSONArray;
    i, contador: integer;
begin

      Try

         vJsonArray := TJSONArray.Create;

         contador := 0;

         for I := 0 to listaClientes.Count -1 do Begin
            vjsonObject := TJSONObject.Create;
            //vjsonObject := TJSONObject.ParseJSONValue(TEncoding.ASCII.GetBytes(listaProdutos.Items[i].descricao), 0) as TJSONObject;

            vjsonObject.AddPair(TJSONPair.Create('id_empresa', TJSONString.Create(listaClientes.Items[i].id_empresa.ToString)));
            vjsonObject.AddPair(TJSONPair.Create('id_cliente', TJSONString.Create(listaClientes.Items[i].id_cliente.ToString)));
            vjsonObject.AddPair(TJSONPair.Create('nome', TJSONString.Create(listaClientes.Items[i].nome)));
            vjsonObject.AddPair(TJSONPair.Create('fantasia', TJSONString.Create(listaClientes.Items[i].fantasia)));
            vjsonObject.AddPair(TJSONPair.Create('cpf_cnpj', TJSONString.Create(listaClientes.Items[i].cpf_cnpj)));
            vjsonObject.AddPair(TJSONPair.Create('logradouro', TJSONString.Create(listaClientes.Items[i].logradouro)));
            vjsonObject.AddPair(TJSONPair.Create('numero', TJSONString.Create(listaClientes.Items[i].numero)));
            vjsonObject.AddPair(TJSONPair.Create('complemento', TJSONString.Create(listaClientes.Items[i].complemento)));
            vjsonObject.AddPair(TJSONPair.Create('bairro', TJSONString.Create(listaClientes.Items[i].bairro)));
            vjsonObject.AddPair(TJSONPair.Create('id_municipio', TJSONString.Create(listaClientes.Items[i].id_municipio.ToString)));
            vjsonObject.AddPair(TJSONPair.Create('celular', TJSONString.Create(listaClientes.Items[i].celular)));
            vjsonObject.AddPair(TJSONPair.Create('fone_fixo', TJSONString.Create(listaClientes.Items[i].fone_fixo)));
            vjsonObject.AddPair(TJSONPair.Create('status', TJSONString.Create(listaClientes.Items[i].status)));

            vJsonArray.Add(vjsonObject);

            inc(contador);

            if ((contador = 100) or (i = listaClientes.Count -1)) then Begin

               frmPrincipal.CarregarRest();

               frmPrincipal.RESTRequest1.Resource := '/PedidoClientes/{bd}';
               frmPrincipal.RESTRequest1.Method := TRESTRequestMethod.rmPUT;
               frmPrincipal.RESTRequest1.Params.AddUrlSegment('bd',Trim(frmPrincipal.bd));
               frmPrincipal.RESTRequest1.AddBody(vJsonArray.ToString, ContentTypeFromString('application/json'));
               frmPrincipal.RESTRequest1.Execute;

               contador := 0;
               vJsonArray.Destroy;
               vJsonArray := TJSONArray.Create;

               frmPrincipal.RESTClient1.Disconnect;

            End;


         End;

         if frmPrincipal.RESTResponse1.StatusCode = 201 then Begin
            prcMsgInf('Registros atualizados com sucesso');
         End
         else
            prcMsgAdv('Falha ao atualizar os registros.');

      Except

         prcMsgErro('Erro ao atualizar os registros');

      End;


end;

class function TPedidoClientesController.RetornarListaDeClientes: TObjectList<TPedidoClientesVO>;
Var vjsonObject: TJSONObject;
    i: integer;
    vJsonPair:TJSONPair;
    vJsonArray: TJSONArray;
    lista: TObjectList<TPedidoClientesVO>;
    produtos: TPedidoClientesVO;

begin

  Try

   frmPrincipal.CarregarRest();

   frmPrincipal.RESTRequest1.Resource := '/GetPedidoListarClientes/{schema}';
   frmPrincipal.RESTRequest1.Method := TRESTRequestMethod.rmGET;
   frmPrincipal.RESTRequest1.Params.AddUrlSegment('schema',Trim(frmPrincipal.bd));
   frmPrincipal.RESTRequest1.Execute;

   vJsonArray := TJsonobject.ParseJSONValue(frmPrincipal.RESTResponse1.JSONText) as TJSONArray;
   lista := TObjectList<TPedidoClientesVO>.Create();

   for I := 0 to vJsonArray.Count - 1 do Begin

      produtos := TJson.JsonToObject<TPedidoClientesVO>(VJsonArray.Get(i).ToJSON);
      lista.Add(produtos);

   End;

   Result := lista;

  Except
  End;

end;

end.
