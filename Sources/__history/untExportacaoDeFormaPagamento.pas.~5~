unit untExportacaoDeFormaPagamento;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option, PedidoSqlController,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, PedidoSqlVO, PedidoFormaPagamentoVO,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB, Vcl.Buttons, generics.collections,
  Vcl.Grids, Vcl.DBGrids, FireDAC.Comp.Client, FireDAC.Comp.DataSet, PedidoFormaPagamentoController;

type

  ThreadSplashExportarFuncionarios = class (TThread)
    public
       constructor creeate();
       procedure Execute; override;
  end;

  TfrmExportacaoDeFormaPagamento = class(TForm)
    dtFormaPG: TDataSource;
    qryFormaPG: TFDQuery;
    DBGrid1: TDBGrid;
    SpeedButton3: TSpeedButton;
    SpeedButton1: TSpeedButton;
    qryFormaPGID: TIntegerField;
    qryFormaPGDESCRICAO: TStringField;
    qryFormaPGSTATUS: TStringField;
    qryFormaPGPERMITE_TROCO: TStringField;
    procedure SpeedButton1Click(Sender: TObject);
    procedure SpeedButton3Click(Sender: TObject);
  private
    { Private declarations }
    FThreadSplashExportarFuncionarios: ThreadSplashExportarFuncionarios;
  public
    { Public declarations }
    procedure ImportarFuncionarios;
  end;

var
  frmExportacaoDeFormaPagamento: TfrmExportacaoDeFormaPagamento;

implementation

{$R *.dfm}

uses untSplash, untPrincipal;


{ TfrmExportacaoDeFuncionarios }

procedure TfrmExportacaoDeFormaPagamento.ImportarFuncionarios;
Var sql: TPedidoSqlVO;
begin

   Try

      Try

         sql := TPedidoSqlVO.Create;
         sql :=  TPedidoSqlController.RetornarSQL(1);

         qryFormaPG.Close;
         qryFormaPG.SQL.Clear;
         qryFormaPG.SQL.Add(sql.sql_forma_pagamento);
         qryFormaPG.Open;

      Except

         on e: exception do Begin
            showmessage('Erro: '+e.Message);
            Exit;
         End;

      end;

   finally
      FreeAndNil(sql);
      frmSplash.Close;
   End;

end;

{ ThreadSplashExportarFuncionarios }

constructor ThreadSplashExportarFuncionarios.creeate;
begin

   inherited Create(false);

end;

procedure ThreadSplashExportarFuncionarios.Execute;
begin

   Try
      frmExportacaoDeFormaPagamento.ImportarFuncionarios;
   Finally
      FreeAndNil(frmSplash);
   End;


end;

procedure TfrmExportacaoDeFormaPagamento.SpeedButton1Click(Sender: TObject);
Var listaFormaPagamento: TObjectList<TPedidoFormaPagamentoVO>;
    pedido: TPedidoFormaPagamentoVO;
begin

   Try

      qryFormaPG.First;
      listaFormaPagamento := TObjectList<TPedidoFormaPagamentoVO>.Create;

      while not(qryFormaPG.Eof) do Begin

         pedido := TPedidoFormaPagamentoVO.Create;

         pedido.ID_FORMA_PAGAMENTO := qryFormaPGID.AsInteger;
         pedido.DESCRICAO          := Trim(qryFormaPGDESCRICAO.AsString);
         pedido.status             := Trim(qryFormaPGSTATUS.AsString);
         pedido.PERMITE_TROCO      := Trim(qryFormaPGPERMITE_TROCO.AsString);
         pedido.id_empresa         := frmPrincipal.idEmpresa;
         listaFormaPagamento.Add(pedido);
         qryFormaPG.Next;

      End;

      TPedidoFormaPagamentoController.GravarFormaDePagamento(listaFormaPagamento);

   Finally
   End;

end;
procedure TfrmExportacaoDeFormaPagamento.SpeedButton3Click(Sender: TObject);
begin

   FThreadSplashExportarFuncionarios := ThreadSplashExportarFuncionarios.creeate;
   frmSplash := TfrmSplash.Create(Self);
   frmSplash.Timer2.Enabled := True;
   frmSplash.ShowModal;

end;

end.
