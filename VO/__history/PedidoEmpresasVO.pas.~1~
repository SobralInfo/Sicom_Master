unit PedidoEmpresasVO;

interface

Type TPedidoEmpresasVO = class
  private
    Fvalor_unitario: double;
    Fid_produto: string;
    Fdescricao: string;
    Fid: integer;
    Fstatus: string;
    Fqtde_estoque: double;
    Funidade: string;
    Fid_empresa: integer;
    procedure Setdescricao(const Value: string);
    procedure Setid(const Value: integer);
    procedure Setid_empresa(const Value: integer);
    procedure Setid_produto(const Value: string);
    procedure Setqtde_estoque(const Value: double);
    procedure Setstatus(const Value: string);
    procedure Setunidade(const Value: string);
    procedure Setvalor_unitario(const Value: double);

   public
      property id: integer read Fid write Setid;
      property id_empresa: integer read Fid_empresa write Setid_empresa;
      property id_produto: string read Fid_produto write Setid_produto;
      property status: string read Fstatus write Setstatus;
      property descricao: string read Fdescricao write Setdescricao;
      property unidade: string read Funidade write Setunidade;
      property valor_unitario: double read Fvalor_unitario write Setvalor_unitario;
      property qtde_estoque: double read Fqtde_estoque write Setqtde_estoque;

end;

implementation

{ TPedidoEmpresasVO }

procedure TPedidoEmpresasVO.Setdescricao(const Value: string);
begin
  Fdescricao := Value;
end;

procedure TPedidoEmpresasVO.Setid(const Value: integer);
begin
  Fid := Value;
end;

procedure TPedidoEmpresasVO.Setid_empresa(const Value: integer);
begin
  Fid_empresa := Value;
end;

procedure TPedidoEmpresasVO.Setid_produto(const Value: string);
begin
  Fid_produto := Value;
end;

procedure TPedidoEmpresasVO.Setqtde_estoque(const Value: double);
begin
  Fqtde_estoque := Value;
end;

procedure TPedidoEmpresasVO.Setstatus(const Value: string);
begin
  Fstatus := Value;
end;

procedure TPedidoEmpresasVO.Setunidade(const Value: string);
begin
  Funidade := Value;
end;

procedure TPedidoEmpresasVO.Setvalor_unitario(const Value: double);
begin
  Fvalor_unitario := Value;
end;

end.
